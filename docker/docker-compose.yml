version: '3.8'

services:
  redis:
    image: redis:6

  api:
    image: ghcr.io/saleor/saleor:3.20
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=False
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
    depends_on:
      - redis

  worker:
    image: ghcr.io/saleor/saleor:3.20
    command: celery -A saleor worker --app=saleor.celeryconf:app --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis

  scheduler:
    image: ghcr.io/saleor/saleor:3.20
    command: celery --app saleor.celeryconf:app beat --scheduler saleor.schedulers.schedulers.DatabaseScheduler
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis

  dashboard:
    image: ghcr.io/saleor/saleor-dashboard:3.20
    environment:
      - API_URI=${API_URL}

  storefront:
    build:
      context: ../saleor-storefront
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SALEOR_API_URL=${API_URL}
    environment:
      - NEXT_PUBLIC_SALEOR_API_URL=${API_URL}

  nginx:
    image: nginx:1.21
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - dashboard
      - storefront