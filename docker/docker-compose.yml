version: '3.8'

services:
  redis:
    image: redis:6
    restart: always
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    image: ghcr.io/saleor/saleor:3.20
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=False
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}
      - DEFAULT_FROM_EMAIL=noreply@${ALLOWED_HOSTS}
      - ENABLE_ACCOUNT_CONFIRMATION_BY_EMAIL=True
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: ghcr.io/saleor/saleor:3.20
    restart: always
    command: celery -A saleor worker --app=saleor.celeryconf:app --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
    depends_on:
      - redis
      - api

  scheduler:
    image: ghcr.io/saleor/saleor:3.20
    restart: always
    command: celery --app saleor.celeryconf:app beat --scheduler saleor.schedulers.schedulers.DatabaseScheduler
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - redis
      - api

  dashboard:
    image: ghcr.io/saleor/saleor-dashboard:3.20
    restart: always
    environment:
      - API_URI=${API_URL}
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  storefront:
    build:
      context: ../saleor-storefront
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SALEOR_API_URL=${API_URL}
    restart: always
    environment:
      - NEXT_PUBLIC_SALEOR_API_URL=${API_URL}
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.21
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - letsencrypt-data:/etc/letsencrypt
      - letsencrypt-webroot:/var/www/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - dashboard
      - storefront
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
  letsencrypt-data:
  letsencrypt-webroot: